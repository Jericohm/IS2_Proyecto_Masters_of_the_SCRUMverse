<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>CICLO DE VIDA DE LOS CONTENEDORES</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
  </head>
  <body  style="background-color: #0db7ed;">
    <div class="container-fluid bg-dark py-4">
      <div class="container text-white">
        <h1 align="center" class="display-4"><b>CICLO DE VIDA DE LOS CONTENEDORES</b></h1>


      </div>

    </div>
    <div class="container py-5 shadow-lg p-3 mb-5  rounded">


        <p class="lead"><b>El ciclo de vida de aplicaciones en contenedor es una trayectoria que empieza por el desarrollador.</b></p>
        <p class="lead"><b> El desarrollador decide implementar contenedores y Docker, ya que así se eliminan las fricciones en las implementaciones y las operaciones de TI.</b></p>
        <p class="lead"><b> En la última instancia, ayuda a todos los usuarios a ser más ágiles, más productivos de un extremo a otro y más rápidos.</b></p>
        <p class="lead"><b>Haciendo foco particularmente en el contenedor, podemos mencionar que los diferentes estados que este puede manejar son Created, Running, Stopped, Paused, Killed.</b></p>
        <p class="lead"><b>Visto gráficamente estos son los estados con las transiciones correspondientes a cada comando que se puede ejecutar sobre un contenedor</b></p>
        <p class="lead"><b>Docker Create: crea una capa de contenedor grabable sobre la imagen especificada y la prepara para ejecutar con un comando especificado</b></p>
        <p class="lead"><b>Docker Start: Iniciar uno o más contenedores detenidos.</b></p>
        <p class="lead"><b>Docker Restart: Resetea uno o mas contenedores.</b></p>
        <p class="lead"><b>Docker Stop: Detener uno o más contenedores en ejecución.</b></p>
        <p class="lead"><b>Docker Pause: Suspende todos los procesos en los contenedores especificados</b></p>
        <p class="lead"><b>Docker Unpause: Anula la suspensión de todos los procesos en los contenedores especificados. </b></p>
        <p class="lead"><b>Docker Kill: Mata uno o más contenedores. El proceso principal dentro del contenedor se envía señal SIGKILL </b></p>
        <p class="lead"><b>Docker RM: Retire uno o más contenedores.</b></p>
        <p class="lead"><b>Docker PS: Lista todos los contenedores.</b></p>




           <img src='/css/{{img}}' class="img-rounded mx-auto d-block" alt="">



  </div>


</main>

<footer class="footer mt-auto py-3 bg-light">
  <div class="container">
    <span class="text-muted">Conceptos Docker</span>
  </div>
</footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
  </body>
</html>
